<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<PropertyGroup>
		<VersionPrefix>1.1.0</VersionPrefix>
	</PropertyGroup>

	<PropertyGroup>
		<SolutionDir>$(MSBuildProjectDirectory)\src\</SolutionDir>

		<VersionControlInfo Condition=" '$(TRAVIS)' == 'true' ">$(TRAVIS_COMMIT) ($(TRAVIS_BRANCH))</VersionControlInfo>
		<VersionControlInfo Condition=" '$(VersionControlInfo)' == '' ">(unknown version control revision)</VersionControlInfo>

		<BuildNumber Condition=" '$(TRAVIS)' == 'true' ">$(TRAVIS_BUILD_NUMBER)</BuildNumber>
		<BuildNumber Condition=" '$(BuildNumber)' == '' ">0</BuildNumber>

		<AssemblyVersion>$(VersionPrefix).$(BuildNumber)</AssemblyVersion>

		<VersionSuffix Condition=" '$(TRAVIS)' == 'true' ">build$(BuildNumber)</VersionSuffix>

		<PackageVersion>$(VersionPrefix)</PackageVersion>
		<PackageVersion Condition=" '$(VersionSuffix)' != '' ">$(PackageVersion)-$(VersionSuffix)</PackageVersion>

		<AssemblyInformationalVersion>$(PackageVersion) $(VersionControlInfo)</AssemblyInformationalVersion>

		<TestsEnabled>true</TestsEnabled>
	</PropertyGroup>

	<ItemGroup>
		<VersionInfoContent Include="[assembly: global::System.Reflection.AssemblyVersionAttribute(&quot;$(AssemblyVersion)&quot;)]"/>
		<VersionInfoContent Include="[assembly: global::System.Reflection.AssemblyFileVersionAttribute(&quot;$(AssemblyVersion)&quot;)]"/>
		<VersionInfoContent Include="[assembly: global::System.Reflection.AssemblyInformationalVersionAttribute(&quot;$(AssemblyInformationalVersion)&quot;)]"/>
	</ItemGroup>

	<Target Name="Build" DependsOnTargets="Clean;RestoreSolutionPackages;GenerateVersionInfo;Compile;Test;Package"/>

	<Target Name="Clean">
		<ItemGroup>
			<Trash Include="build\**\*" />
			<Trash Include="$(SolutionDir)*\bin\**\*" />
			<Trash Include="$(SolutionDir)*\obj\**\*" />
		</ItemGroup>
		<Delete Files="@(Trash)"/>
	</Target>

    <Target Name="RestoreSolutionPackages" DependsOnTargets="DownloadNuGetCommandLineClient">
        <Exec Command="$(NuGetCommand) restore $(SolutionDir) -NonInteractive"/>
    </Target>

	<Target Name="Compile">
		<ItemGroup>
			<Solution Include="$(SolutionDir)*.sln"/>
		</ItemGroup>
		<MSBuild Projects="@(Solution)" Targets="Build" Properties="Configuration=Debug"/>
		<MSBuild Projects="@(Solution)" Targets="Build" Properties="Configuration=Release"/>
	</Target>

	<Target Name="Test" Condition=" '$(TestsEnabled)' == 'true' ">
		<ItemGroup>
			<NUnitRunner Include="$(SolutionDir)packages\NUnit.Runners.*\tools\nunit-console.exe"/>
		</ItemGroup>
		<Error Text="No NUnit test runner package found in $(SolutionDir)packages." Condition=" '@(NUnitRunner)' == '' "/>

		<CreateProperty Value="&quot;%(NUnitRunner.Identity)&quot;" Condition=" '$(OS)' == 'Windows_NT' ">
			<Output TaskParameter="Value" PropertyName="NUnitRunnerCommand"/>
		</CreateProperty>
		<CreateProperty Value="mono --runtime=v4.0.30319 &quot;%(NUnitRunner.Identity)&quot;" Condition=" '$(OS)' != 'Windows_NT' ">
			<Output TaskParameter="Value" PropertyName="NUnitRunnerCommand"/>
		</CreateProperty>
		
		<Message Text="Using test runner $(NUnitRunnerCommand)"/>
		<ItemGroup>
			<TestAssembly Include="$(SolutionDir)*/bin/Debug/*Test*.dll"/>
		</ItemGroup>
		<Exec Command="$(NUnitRunnerCommand) @(TestAssembly -> '&quot;%(FullPath)&quot;', ' ') -noshadow"/>
	</Target>

	<Target Name="Package">
		<MakeDir Directories="build/artifacts"/>
		<Exec Command="$(NuGetCommand) pack -o $(MSBuildProjectDirectory)/build/artifacts -Properties Configuration=Release -Version &quot;$(PackageVersion)&quot; -NoPackageAnalysis"/>
	</Target>

	<Target Name="GenerateVersionInfo">
		<MakeDir Directories="build/artifacts"/>
		<WriteLinesToFile File="build/VersionInfo.cs" Lines="@(VersionInfoContent)" Overwrite="true"/>
		<Message Text="PackageVersion: $(PackageVersion)"/>
		<Message Text="AssemblyVersion: $(AssemblyVersion)"/>
		<Message Text="AssemblyInformationalVersion: $(AssemblyInformationalVersion)"/>
		<Copy SourceFiles="build/VersionInfo.cs" DestinationFiles="build/artifacts/VersionInfo-$(BuildNumber).cs"/>
		<Message Text="To repeat this build: git checkout $(TRAVIS_COMMIT); msbuild /p:TRAVIS=true,TRAVIS_COMMIT=$(TRAVIS_COMMIT),TRAVIS_BRANCH=$(TRAVIS_BRANCH),TRAVIS_BUILD_NUMBER=$(TRAVIS_BUILD_NUMBER)"/>
	</Target>

	<Import Project="NuGet.targets"/>
</Project>
